/*
    The code in this file uses open source libraries provided by thecoderscorner

    DO NOT EDIT THIS FILE, IT WILL BE GENERATED EVERY TIME YOU USE THE UI DESIGNER
    INSTEAD EITHER PUT CODE IN YOUR SKETCH OR CREATE ANOTHER SOURCE FILE.

    All the variables you may need access to are marked extern in this file for easy
    use elsewhere.
 */

#ifndef MENU_GENERATED_CODE_H
#define MENU_GENERATED_CODE_H

#include <Arduino.h>
#include <tcMenu.h>
#include "tcMenuU8g2.h"
#include <IoAbstraction.h>
#include <EepromItemStorage.h>
#include <ArduinoEEPROMAbstraction.h>

// variables we declare that you may need to access
extern const PROGMEM ConnectorLocalInfo applicationInfo;
extern U8G2_SH1106_128X64_NONAME_F_HW_I2C gfx;
extern U8g2Drawable gfxDrawable;
extern GraphicsDeviceRenderer renderer;

// Any externals needed by IO expanders, EEPROMs etc


// Global Menu Item exports
extern AnalogMenuItem menuThreshold;
extern AnalogMenuItem menuPIDInterval;
extern AnalogMenuItem menuKo;
extern AnalogMenuItem menuKd;
extern AnalogMenuItem menuKi;
extern AnalogMenuItem menuKp;
extern BackMenuItem menuBackPIDParams;
extern SubMenuItem menuPIDParams;
extern ActionMenuItem menuSaveValues;
extern FloatMenuItem menuTicksB;
extern FloatMenuItem menuTicksA;
extern FloatMenuItem menuSpeedB;
extern AnalogMenuItem menuSetB;
extern FloatMenuItem menuSpeedA;
extern AnalogMenuItem menuSetA;

// Provide a wrapper to get hold of the root menu item and export setupMenu
inline MenuItem& rootMenuItem() { return menuSetA; }
void setupMenu();

// Callback functions must always include CALLBACK_FUNCTION after the return type
#define CALLBACK_FUNCTION

void CALLBACK_FUNCTION ResetTicsA(int id);
void CALLBACK_FUNCTION ResetTicsB(int id);
void CALLBACK_FUNCTION SavePID(int id);
void CALLBACK_FUNCTION SetKd(int id);
void CALLBACK_FUNCTION SetKi(int id);
void CALLBACK_FUNCTION SetKo(int id);
void CALLBACK_FUNCTION SetKp(int id);
void CALLBACK_FUNCTION SetPIDHz(int id);
void CALLBACK_FUNCTION SetSpeedA(int id);
void CALLBACK_FUNCTION SetSpeedB(int id);
void CALLBACK_FUNCTION SetThreshold(int id);
void CALLBACK_FUNCTION StopA(int id);
void CALLBACK_FUNCTION StopB(int id);

#endif // MENU_GENERATED_CODE_H
